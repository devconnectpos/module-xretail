<?xml version="1.0"?>
<!--
/**
 * Copyright Â© 2016 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Store:etc/config.xsd">
    <default>
        <xpos>
            <advance>
                <php_run_time>php</php_run_time>
            </advance>
            <order_email>
                <enabled>1</enabled>
                <template>xpos_order_email_template</template>
            </order_email>
        </xpos>
        <apirouters>
            <router>
                <!--Product-->
                <xproduct>
                    <method>Get</method>
                    <service>SM\Product\Repositories\ProductManagement</service>
                    <function>getProductData</function>
                </xproduct>
                <product>
                    <method>Get</method>
                    <service>SM\Product\Repositories\ProductManagement</service>
                    <function>getProductData</function>
                </product>
                <pwa_product>
                    <method>Get</method>
                    <service>SM\Product\Repositories\ProductManagement</service>
                    <function>getPWAProductData</function>
                </pwa_product>

                <xcategory>
                    <method>Get</method>
                    <service>SM\Category\Repositories\CategoryManagement</service>
                    <function>getCategoryData</function>
                </xcategory>
                <category>
                    <method>Get</method>
                    <service>SM\Category\Repositories\CategoryManagement</service>
                    <function>getCategoryData</function>
                </category>
                <load-category>
                    <method>Get</method>
                    <service>SM\Category\Repositories\CategoryManagement</service>
                    <function>getDataCategory</function>
                </load-category>
                <!--Customer-->
                <xcustomer>
                    <method>Get</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>getCustomerData</function>
                </xcustomer>
                <customer>
                    <method>Get</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>getCustomerData</function>
                </customer>
                <customer>
                    <method>Post</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>save</function>
                </customer>
                <customer>
                    <method>Put</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>save</function>
                </customer>
                <customer-subscribe>
                    <method>Post</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>saveSub</function>
                </customer-subscribe>
                <customer-address>
                    <method>Post</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>save</function>
                </customer-address>
                <customer-address>
                    <method>Put</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>createAddress</function>
                </customer-address>
                <customer-group>
                    <method>Get</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>getCustomerGroupData</function>
                </customer-group>
                <!--Directory Data-->
                <country-region>
                    <method>Get</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>getCountryRegionData</function>
                </country-region>
                <!--Store-->
                <store>
                    <method>Get</method>
                    <service>SM\Store\Repositories\StoreManagement</service>
                    <function>getStoreData</function>
                </store>
                <!--Tax-->
                <tax-rates>
                    <method>Get</method>
                    <service>SM\Tax\Repositories\TaxManagement</service>
                    <function>getTaxRatesData</function>
                </tax-rates>
                <tax-class>
                    <method>Get</method>
                    <service>SM\Tax\Repositories\TaxManagement</service>
                    <function>getTaxClassData</function>
                </tax-class>
                <!--Setting-->
                <xsetting>
                    <method>Get</method>
                    <service>SM\Setting\Repositories\SettingManagement</service>
                    <function>getSettingData</function>
                </xsetting>
                <setting>
                    <method>Get</method>
                    <service>SM\Setting\Repositories\SettingManagement</service>
                    <function>getSettingData</function>
                </setting>
                <retail-setting>
                    <method>Get</method>
                    <service>SM\Setting\Repositories\SettingManagement</service>
                    <function>getRetailSettingData</function>
                </retail-setting>
                <retail-setting>
                    <method>Post</method>
                    <service>SM\Setting\Repositories\SettingManagement</service>
                    <function>saveRetailSettingData</function>
                </retail-setting>
                <!--Create Order-->
                <load-order-data>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>loadOrderData</function>
                </load-order-data>
                <save-order>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>saveOrder</function>
                </save-order>
                <update-order-item>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderItemManagement</service>
                    <function>updateOrderItem</function>
                </update-order-item>
                <mass-update-order-item>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderItemManagement</service>
                    <function>massUpdateOrderItem</function>
                </mass-update-order-item>
                <take-payment>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\InvoiceManagement</service>
                    <function>takePayment</function>
                </take-payment>
                <!--Update Note Order-->
                <update-order-note>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>updateOrderNote</function>
                </update-order-note>
                <!--Update rate Order-->
                <rate-order>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>rateOrder</function>
                </rate-order>

                <!-- update print time counter -->
                <save-print-time>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>updatePrintTime</function>
                </save-print-time>

                <!--Order History-->
                <order>
                    <method>Get</method>
                    <service>SM\Sales\Repositories\OrderHistoryManagement</service>
                    <function>getOrders</function>
                </order>
                <shifts>
                    <method>Get</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>getShiftData</function>
                </shifts>
                <check-shifts>
                    <method>Post</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>isOpenShift</function>
                </check-shifts>
                <check-shifts>
                    <method>Get</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>isOpenShift</function>
                </check-shifts>
                <check-open-shift>
                    <method>Get</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>isOpenShiftJs</function>
                </check-open-shift>
                <open-shift>
                    <method>Post</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>openShift</function>
                </open-shift>
                <close-shift>
                    <method>Post</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>closeShift</function>
                </close-shift>
                <adjust-shift>
                    <method>Post</method>
                    <service>SM\Shift\Repositories\ShiftManagement</service>
                    <function>adjustCash</function>
                </adjust-shift>
                <!--Creditmemo-->
                <creditmemo>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\CreditmemoManagement</service>
                    <function>creditmemo</function>
                </creditmemo>
                <!--Creditmemo-->
                <shipment>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\ShipmentManagement</service>
                    <function>createShipment</function>
                </shipment>
                <!--Outlet & Register-->
                <outlet>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\OutletManagement</service>
                    <function>getOutlets</function>
                </outlet>
                <outlet>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\OutletManagement</service>
                    <function>save</function>
                </outlet>
                <outlet>
                    <method>Delete</method>
                    <service>SM\XRetail\Repositories\OutletManagement</service>
                    <function>delete</function>
                </outlet>
                <register>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\OutletManagement</service>
                    <function>saveRegister</function>
                </register>
                <register>
                    <method>Delete</method>
                    <service>SM\XRetail\Repositories\OutletManagement</service>
                    <function>deleteRegister</function>
                </register>
                <!--Wish List PWA-->
                <wishlist>
                    <method>Post</method>
                    <service>SM\Wishlist\Repositories\WishlistManagement</service>
                    <function>add</function>
                </wishlist>
                <wishlist>
                    <method>Delete</method>
                    <service>SM\Wishlist\Repositories\WishlistManagement</service>
                    <function>remove</function>
                </wishlist>
                <!--end Wish List PWA-->

                <!-- Wish List CPOS -->
                <delete-wishlist>
                    <method>Post</method>
                    <service>SM\Wishlist\Repositories\WishlistManagement</service>
                    <function>removeItemFromCposWishList</function>
                </delete-wishlist>
                <!-- End Wish List CPOS -->

                <!--Client order count-->
                <user-order-count>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\UserOrderCount</service>
                    <function>getUserOrderCount</function>
                </user-order-count>
                <payment>
                    <method>Get</method>
                    <service>SM\Payment\Repositories\PaymentManagement</service>
                    <function>getPaymentData</function>
                </payment>
                <payment>
                    <method>Post</method>
                    <service>SM\Payment\Repositories\PaymentManagement</service>
                    <function>savePayment</function>
                </payment>

                <!--Receipt-->
                <receipts>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\ReceiptManagement</service>
                    <function>getReceiptData</function>
                </receipts>
                <receipts>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\ReceiptManagement</service>
                    <function>save</function>
                </receipts>
                <receipts>
                    <method>Delete</method>
                    <service>SM\XRetail\Repositories\ReceiptManagement</service>
                    <function>delete</function>
                </receipts>

                <!--Role/Permission-->
                <role>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\RolePermissionManagement</service>
                    <function>getRoles</function>
                </role>
                <role>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\RolePermissionManagement</service>
                    <function>saveRole</function>
                </role>
                <role>
                    <method>Delete</method>
                    <service>SM\XRetail\Repositories\RolePermissionManagement</service>
                    <function>deleteRole</function>
                </role>
                <permission>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\RolePermissionManagement</service>
                    <function>getPermission</function>
                </permission>
                <permission>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\RolePermissionManagement</service>
                    <function>savePermission</function>
                </permission>
                <healCheck>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\HealCheck</service>
                    <function>getStatus</function>
                </healCheck>

                <!--Click n Collect-->
                <invoice>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\ShipmentManagement</service>
                    <function>createClickAndCollectInvoice</function>
                </invoice>

                <!--Email-->
                <send-email>
                    <method>Post</method>
                    <service>SM\Email\Repositories\EmailManagement</service>
                    <function>sendReceipt</function>
                </send-email>

                <!--warehouse-->
                <warehouse>
                    <method>Get</method>
                    <service>SM\Integrate\Model\WarehouseIntegrateManagement</service>
                    <function>getList</function>
                </warehouse>
                <warehouse-item>
                    <method>Get</method>
                    <service>SM\Integrate\Model\WarehouseIntegrateManagement</service>
                    <function>getWarehouseItem</function>
                </warehouse-item>
                <warehouse-specified-item>
                    <method>Get</method>
                    <service>SM\Integrate\Model\WarehouseIntegrateManagement</service>
                    <function>getWarehouseSpecifiedItem</function>
                </warehouse-specified-item>
                <warehouse-bms-stock-transfer>
                    <method>Get</method>
                    <service>SM\Integrate\Model\BmsStockTransfer</service>
                    <function>getListStockTransfer</function>
                </warehouse-bms-stock-transfer>
                <warehouse-bms-stock-transfer-item>
                    <method>Post</method>
                    <service>SM\Integrate\Model\BmsStockTransfer</service>
                    <function>saveStockTransfer</function>
                </warehouse-bms-stock-transfer-item>
                <warehouse-bms-stock-transfer-apply>
                    <method>Post</method>
                    <service>SM\Integrate\Model\BmsStockTransfer</service>
                    <function>applyTransfer</function>
                </warehouse-bms-stock-transfer-apply>
                <warehouse-bms-get-products>
                    <method>Get</method>
                    <service>SM\Integrate\Model\BmsStockTransfer</service>
                    <function>getProductsForTransferStock</function>
                </warehouse-bms-get-products>

                <dashboard>
                    <method>Post</method>
                    <service>SM\Report\Repositories\DashboardManagement</service>
                    <function>dashboardChartData</function>
                </dashboard>

                <salesreport>
                    <method>Post</method>
                    <service>SM\Report\Repositories\SalesManagement</service>
                    <function>salesReportData</function>
                </salesreport>

                <customer-detail>
                    <method>Get</method>
                    <service>SM\Customer\Repositories\CustomerManagement</service>
                    <function>loadCustomerDetail</function>
                </customer-detail>

                <product-cache>
                    <method>Get</method>
                    <service>SM\Performance\Repositories\ProductCacheManagement</service>
                    <function>getListProductCache</function>
                </product-cache>

                <product-cache>
                    <method>Delete</method>
                    <service>SM\Performance\Repositories\ProductCacheManagement</service>
                    <function>removeProductCache</function>
                </product-cache>

                <shipping-methods>
                    <method>Get</method>
                    <service>SM\Shipping\Repositories\ShippingManagement</service>
                    <function>getShippingMethods</function>
                </shipping-methods>

                <shipping-methods>
                    <method>Post</method>
                    <service>SM\Shipping\Repositories\ShippingManagement</service>
                    <function>updateShippingMethods</function>
                </shipping-methods>

                <multi-shipping-rates>
                    <method>Post</method>
                    <service>SM\Shipping\Repositories\ShippingManagement</service>
                    <function>getMultiShippingRates</function>
                </multi-shipping-rates>

                <!--MediaLibrary-->
                <media-library>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\MediaLibraryManagement</service>
                    <function>getMediaLibraryData</function>
                </media-library>
                <media-library>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\MediaLibraryManagement</service>
                    <function>save</function>
                </media-library>
                <media-library>
                    <method>Delete</method>
                    <service>SM\XRetail\Repositories\MediaLibraryManagement</service>
                    <function>delete</function>
                </media-library>

                <related-product>
                    <method>Get</method>
                    <service>SM\Product\Repositories\ProductManagement</service>
                    <function>getRelatedProduct</function>
                </related-product>

                <!--Advertisement-->
                <advertisement>
                    <method>Get</method>
                    <service>SM\XRetail\Repositories\AdvertisementManagement</service>
                    <function>getAdvertisementData</function>
                </advertisement>
                <advertisement>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\AdvertisementManagement</service>
                    <function>save</function>
                </advertisement>
                <advertisement>
                    <method>Delete</method>
                    <service>SM\XRetail\Repositories\AdvertisementManagement</service>
                    <function>delete</function>
                </advertisement>

                <!--3rd Payment Gateway-->
                <process-cardknox>
                    <method>Post</method>
                    <service>SM\CardKnox\Repositories\CardKnoxManagement</service>
                    <function>processCardKnox</function>
                </process-cardknox>

                <shipping-rates>
                    <method>Post</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>calculateShippingRates</function>
                </shipping-rates>

                <eway-transaction>
                    <method>Post</method>
                    <service>SM\Eway\Repositories\EwayIntegrationManagement</service>
                    <function>doTransaction</function>
                </eway-transaction>

                <eway-refund>
                    <method>Post</method>
                    <service>SM\Eway\Repositories\EwayIntegrationManagement</service>
                    <function>doRefund</function>
                </eway-refund>

                <!--3rd Payment Express-->
                <payment-express-init-transaction>
                    <method>Post</method>
                    <service>SM\PaymentExpress\Repositories\PaymentExpressManagement</service>
                    <function>initTransaction</function>
                </payment-express-init-transaction>
                <payment-express-status>
                    <method>Post</method>
                    <service>SM\PaymentExpress\Repositories\PaymentExpressManagement</service>
                    <function>checkStatus</function>
                </payment-express-status>
                <payment-express-button>
                    <method>Post</method>
                    <service>SM\PaymentExpress\Repositories\PaymentExpressManagement</service>
                    <function>doButton</function>
                </payment-express-button>
                <payment-express-refund>
                    <method>Post</method>
                    <service>SM\PaymentExpress\Repositories\PaymentExpressManagement</service>
                    <function>doRefund</function>
                </payment-express-refund>
                <save-payment-express-history>
                    <method>Post</method>
                    <service>SM\PaymentExpress\Repositories\PaymentExpressManagement</service>
                    <function>savePaymentExpressHistory</function>
                </save-payment-express-history>
                <payment-express-history>
                    <method>Get</method>
                    <service>SM\PaymentExpress\Repositories\PaymentExpressManagement</service>
                    <function>getListPaymentExpressHistory</function>
                </payment-express-history>
                <!-- END 3rd Payment Express-->

                <!--Electronic Journal-->
                <electronic-journal>
                    <method>Post</method>
                    <service>SM\ElectronicJournal\Repositories\ElectronicJournalManagement</service>
                    <function>save</function>
                </electronic-journal>

                <electronic-journal>
                    <method>Get</method>
                    <service>SM\ElectronicJournal\Repositories\ElectronicJournalManagement</service>
                    <function>getElectronicJournalData</function>
                </electronic-journal>
                <!-- end Electronic Journal-->

                <refund-without-receipts>
                    <method>Post</method>
                    <service>SM\RefundWithoutReceipt\Repositories\RefundWithoutReceiptManagement</service>
                    <function>saveTransaction</function>
                </refund-without-receipts>
                <debug>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\DebugManagement</service>
                    <function>debug</function>
                </debug>

                <!--PWA router API-->
                <guest_customer>
                    <method>Get</method>
                    <service>SM\PWA\Repositories\UserManagement</service>
                    <function>getRetailGuestCustomer</function>
                </guest_customer>
                <check_login>
                    <method>Post</method>
                    <service>SM\PWA\Repositories\UserManagement</service>
                    <function>LoginToPWA</function>
                </check_login>

                <pwa_keyword>
                    <method>Get</method>
                    <service>SM\PWAKeyword\Repositories\PWAKeywordManagement</service>
                    <function>getKeywordData</function>
                </pwa_keyword>

                <pwa_banner>
                    <method>Get</method>
                    <service>SM\PWABanner\Repositories\PWABannerManagement</service>
                    <function>getBannerData</function>
                </pwa_banner>

                <pwa_order>
                    <method>Get</method>
                    <service>SM\PWA\Repositories\OrderManagement</service>
                    <function>getOrderPWA</function>
                </pwa_order>

                <pwa-create-customer>
                    <method>Post</method>
                    <service>SM\PWA\Repositories\UserManagement</service>
                    <function>createCustomerAccountViaPWA</function>
                </pwa-create-customer>

                <pwa-reset-password>
                    <method>Post</method>
                    <service>SM\PWA\Repositories\UserManagement</service>
                    <function>resetPasswordViaPWA</function>
                </pwa-reset-password>

                <pwa-save-customer>
                    <method>Post</method>
                    <service>SM\PWA\Repositories\UserManagement</service>
                    <function>saveCustomerDetails</function>
                </pwa-save-customer>

                <pwa-change-password>
                    <method>Post</method>
                    <service>SM\PWA\Repositories\UserManagement</service>
                    <function>changeCustomerPassword</function>
                </pwa-change-password>

                <pwa_config_gcrp>
                    <method>Get</method>
                    <service>SM\PWAQrCode\Repositories\AheadworksIntegrateManagement</service>
                    <function>getConfigGCRP</function>
                </pwa_config_gcrp>

                <!--store-pick-up-->
                <store-pick-up>
                    <method>Get</method>
                    <service>SM\Integrate\Model\StorePickUpIntegrateManagement</service>
                    <function>getList</function>
                </store-pick-up>

                <!--rma-->
                <order-rma>
                    <method>Get</method>
                    <service>SM\Integrate\Model\RMAIntegrateManagement</service>
                    <function>getOrderRMA</function>
                </order-rma>
                <create-request-rma>
                    <method>Post</method>
                    <service>SM\Integrate\Model\RMAIntegrateManagement</service>
                    <function>createRequestRMA</function>
                </create-request-rma>

                <custom-fields>
                    <method>Get</method>
                    <service>SM\Integrate\Model\RMAIntegrateManagement</service>
                    <function>getListCustomFields</function>
                </custom-fields>
                <magento-invoice>
                    <method>Get</method>
                    <service>SM\Sales\Repositories\OrderManagement</service>
                    <function>printMagentoInvoice</function>
                </magento-invoice>

                <aw-giftcard-codepool>
                    <method>Get</method>
                    <service>SM\Integrate\Model\GCIntegrateManagement</service>
                    <function>getAwGiftCardCodePools</function>
                </aw-giftcard-codepool>
                <token>
                    <method>Post</method>
                    <service>SM\XRetail\Repositories\AccessTokenManagement</service>
                    <function>generateAccessToken</function>
                </token>

                <!-- Get Customer Online Active Cart -->
                <online-carts>
                    <method>Get</method>
                    <service>SM\Sales\Repositories\QuoteManagement</service>
                    <function>getOnlineCarts</function>
                </online-carts>

                <!-- Adyen payment -->
                <adyen-payment-methods>
                    <method>Get</method>
                    <service>SM\Adyen\Repositories\AdyenManagement</service>
                    <function>getPaymentMethods</function>
                </adyen-payment-methods>

                <adyen-process-payment>
                    <method>Post</method>
                    <service>SM\Adyen\Repositories\AdyenManagement</service>
                    <function>processPayment</function>
                </adyen-process-payment>

                <adyen-process-refund>
                    <method>Post</method>
                    <service>SM\Adyen\Repositories\AdyenManagement</service>
                    <function>processRefund</function>
                </adyen-process-refund>
            </router>
        </apirouters>
        <xretail>
            <pos>
                <custom_sale_tax_class>0</custom_sale_tax_class>
                <sync_when_cart_changes>0</sync_when_cart_changes>
                <integrate_freegift>none</integrate_freegift>
                <allow_pending_order>0</allow_pending_order>
            </pos>
        </xretail>
        <csp>
            <mode>
                <storefront>
                    <report_only>1</report_only>
                </storefront>
                <admin>
                    <report_only>1</report_only>
                </admin>
            </mode>
        </csp>
    </default>
</config>
